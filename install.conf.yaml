# Reference: https://github.com/anishathalye/dotbot#directives
- clean: ["~"]

# link cross-platform
- shell:
    - ["", ========== shell pre-execute ==========]
    - [git submodule update --init --recursive, Update submodules]
- defaults:
    link:
      create: true
      relink: true
      force: true
      relative: false
      glob: true
- link:
    ~/bin/: scripts/python/*
- link:
    ~/bin/: scripts/bash/*
- link:
    # submodules
    ~/.config/nvim/: configs/nvim/**
    ~/.config/nvim/lua/: configs/nvim/lua/**
    ~/.config/nvim/lua/LunarVim: submodules/LunarVim
    ~/.fzf: submodules/fzf
    ~/.tmux.conf: submodules/.tmux/.tmux.conf
    # configs
    ~/.cargo/config.toml: configs/cargo/config.toml
    ~/.cbfmt.toml: configs/.cbfmt.toml
    ~/.clang-format: configs/clang/.clang-format
    ~/.clang-tidy: configs/clang/.clang-tidy
    ~/.config/atuin/config.toml: configs/atuin/config.toml
    ~/.config/btop/themes/: configs/btop/themes/*
    ~/.config/gh/config.yml: configs/gh/config.yml
    ~/.config/mise/: configs/mise/*
    ~/.gh_repos.yaml: configs/.gh_repos.yaml
    ~/.gitconfig: configs/.gitconfig
    ~/.gitignore: configs/.gitignore
    ~/.rcflags: configs/.rcflags
    ~/.rcppflags: configs/.rcppflags
    ~/.ruff.toml: configs/.ruff.toml
    ~/.stylua.toml: configs/lua/.stylua.toml
    ~/.tmux.conf.local: configs/tmux/.tmux.conf.local
    ~/.tmuxp/clash.yml: configs/tmuxp/clash.yml
    ~/.tmuxp/jupyter.yml: configs/tmuxp/jupyter.yml
    # conditional configs
    ~/.local/share/nvim/site/pack/lazy/opt/asyncrun.vim/autoload/asyncrun/runner/tmuxsol.vim:
      if: "[ -d ~/.local/share/nvim/site/pack/lazy/opt/asyncrun.vim ]"
      path: configs/vim-plugins/asyncrun.vim/runner/tmuxsol.vim

# link for macOS
- shell:
    - ["", ========== macOS install ==========]
- defaults:
    link:
      create: true
      relink: true
      force: true
      relative: false
      glob: true
      if: "[ $(uname) = Darwin ]"
- link:
    # ~/bin/: macos/bin/*
    ~/.tmux.conf.local.os: configs/tmux/.tmux.conf.local.macos
    ~/.dotfiles.os/gitmux: configs/tmux/gitmux/gitmux.macos.amd64
    # macOS only
    ~/.hammerspoon: macos/hammerspoon
    ~/.config/karabiner/assets/complex_modifications/custom.json: macos/karabiner/custom.json
    ~/Library/Application Support/lazygit/config.yml: configs/lazygit/config.yml

# link for Linux (Ubuntu | ArchLinux)
- shell:
    - ["", ========== Linux install ==========]
- defaults:
    link:
      create: true
      relink: true
      force: true
      relative: false
      glob: true
      if: "[ $(uname) = Linux ]"
- link:
    ~/.tmux.conf.local.os: configs/tmux/.tmux.conf.local.linux
    ~/.dotfiles.os/gitmux: configs/tmux/gitmux/gitmux.linux.amd64
    ~/.config/lazygit/config.yml: configs/lazygit/config.yml
    ~/bin/: linux/bin/*
    ~/.config/fcitx5/conf/classicui.conf:
      if: "command -v fcitx5"
      path: ./configs/fcitx5/conf/classicui.conf
    ~/.local/share/fcitx5/themes/:
      if: "command -v fcitx5"
      path: ./configs/fcitx5/themes/*

# ArchLinux
- defaults:
    link:
      create: true
      relink: true
      force: true
      relative: false
      glob: true
      if: "[[ -f '/etc/os-release' ]] && [[ $(cat /etc/os-release) =~ 'ID=arch' ]]"
- link:
    ~/bin/: linux/archlinux/bin/*
    ~/.tool-versions: linux/archlinux/.tool-versions

# Ubuntu
- defaults:
    link:
      create: true
      relink: true
      force: true
      relative: false
      glob: true
      if: "[[ -f '/etc/os-release' ]] && [[ $(cat /etc/os-release) =~ 'ID=ubuntu' ]]"
- link:
    # ~/bin/: linux/ubuntu/bin/*
    # conditional configs
    ~/bin/:
      if: "[[ $(lsb_release -rs) == '22.04' ]]"
      path: linux/ubuntu/22.04/bin/*
    ~/.tool-versions:
      if: "[[ $(lsb_release -rs) == '22.04' ]]"
      path: linux/ubuntu/22.04/.tool-versions

# zshrc
- shell:
    - ["", ========== zsh configs install ==========]
- defaults:
    link:
      create: true
      relink: true
      force: true
      relative: false
      glob: true
- link:
    ~/.zshenv: configs/zsh/zshenv
    ~/.zshrc.pre: configs/zsh/zshrc.pre
    ~/.zshrc: configs/zsh/zshrc
    ~/.zshrc.post: configs/zsh/zshrc.post
    ~/.oh-my-zsh: submodules/ohmyzsh
    ~/.oh-my-zsh/custom/plugins/fzf-tab: submodules/fzf-tab
    ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions: submodules/zsh-autosuggestions
    ~/.oh-my-zsh/custom/plugins/zsh-completions: submodules/zsh-completions
    ~/.zsh_completions: configs/zsh/completions
    ~/.oh-my-zsh/custom/themes/powerlevel10k: submodules/powerlevel10k
    ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting: submodules/zsh-syntax-highlighting
    ~/.p10k.zsh: configs/zsh/powerlevel10k/.p10k.zsh
    ~/.p10k.mise.zsh: configs/zsh/powerlevel10k/.p10k.mise.zsh

# zshrc + wsl
- defaults:
    link:
      create: true
      relink: true
      force: true
      relative: false
      glob: true
      if: 'grep -qEi "(Microsoft|WSL)" /proc/version'
- link:
    ~/.zshrc.wsl: configs/zsh/zshrc.wsl

# docker
- defaults:
    link:
      create: true
      relink: true
      force: true
      relative: false
      glob: true
      # if: 'command -v docker'
- link:
    ~/docker/: docker/*
    ~/.tmuxp/: docker/.tmuxp/*
