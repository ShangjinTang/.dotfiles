######################################################################
# EXPORTS

#=====================================================================
# customized exports, can be overrided in ~/.*shrc.local file
# proxy
export PROXY_IP="127.0.0.1:1080"
export PROXY_ENABLED=1

# tmux
export TMUX_AUTO_LAUNCH=1

# security setting
export SKIP_SSL=1

export TERMINAL_THEME='light'  # Use non-transparent theme for light
# export TERMINAL_THEME='dark'  # Use transparent theme for dark

#=====================================================================
# default exports which do not suggest to modify

export EDITOR=vim
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LANG=en_US.UTF-8
export HISTFILESIZE=10000  # max size in history file, e.g. ~/.bash_history
export HISTSIZE=1000  # max size in command `history`
export HISTCONTROL=ignoreboth  # same as ignorespace:ignoredups

# Terminal Color
# xterm-256 color chart:
#   https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg
export TERM=xterm-256color

# shell: zsh/bash
export SHELL_NAME="$(basename $SHELL)"
if [ $SHELL_NAME = "zsh" ]; then
    export ZSH_DISABLE_COMPFIX=1
    export skip_global_compinit=1

    # session type to distinguish local or ssh(remote), for zsh theme
    export SESSION_TYPE=local
    if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
        export SESSION_TYPE="ssh"
    else
        case $(ps -o comm= -p "$PPID") in
            sshd|*/sshd) export SESSION_TYPE="ssh";;
        esac
    fi
fi

#=====================================================================
# exports for specific command line tool

# https://github.com/rupa/z
if command -v z &> /dev/null; then
    export _Z_NO_RESOLVE_SYMLINKS=1
fi

######################################################################
# FUNCTIONS

#=====================================================================
# functions for local use

_PATHPREPEND() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="$1${PATH:+":$PATH"}"
    fi
}
_PATHAPPEND() {
    if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
        PATH="${PATH:+"$PATH:"}$1"
    fi
}
_PATHAPPEND "$HOME/bin"

#=====================================================================
# fuctions for command line use

# cdup : same as 'cd ..'
# cdup <N> (N=1~9): same as 'cd ../../..' (repeat N times)
# cdup <name>: find the nearest directory and cd into it (not support glob)
function cdup() {
    if [ $# -eq 0 ]; then
        cd ..
    elif [ $# -eq 1 ]; then
        if [[ $1 =~ '^[1-9]$' ]]; then
            for i in {1..$1}; do
                targetdir+="../"
            done
            cd $targetdir
        elif [ $1 = '/' ]; then
            cd /
        else
            parentdir=${${PWD}%/*}/
            if [[ $parentdir == */$1/* ]]; then
                cd ${PWD%/$1/*}/$1
            fi
        fi
    fi
}
alias cu="cdup"

# cd to current/parent dirs which contains input filename
function cdup_contain_file() {
    if [ $# -eq 0 ]; then
        echo "fatal: please specify a filename"
    elif [ $# -eq 1 ]; then
        dir=${PWD}
        while [[ ! -f $dir/$1 ]] && [[ $dir != '/' ]]; do
            dir="$(dirname "$dir")"
        done
        if [[ ! -f $dir/$1 ]]; then
            echo "fatal: file $1 not found in current and parent dirs"
        else
            cd $dir
        fi
    fi
}

if command -v _wf &> /dev/null; then
    function wf() {
        cd "$(_wf "$*")"
    }
fi

# light theme
function settheme() {
    unalias bat &> /dev/null
    case $1 in
        l|light)
            export TERMINAL_THEME="light"
            # bat: use `bat --list-thmes` to check available colors
            export BAT_THEME="OneHalfLight"
            # exa colors
            # Note: this defination cannot have spaces in the begin or end
            # di: directory | ex: executable-file | ln: symlink
            # sn: size numbers | sb: size unit
            # uu: user not you | gu: group not yours | da: date (timestamp)
            # (u|g|t)(r|w|x): (user|group|others)(read|write|execute) | ue: user execute (file types)
            export EXA_COLORS="\
di=38;5;012:ex=38;5;001:ln=38;5;013:\
sn=38;5;002:sb=38;5;002;01:\
uu=38;5;002:gu=38;5;002:da=38;5;006:\
ur=38;5;000:gr=38;5;000:tr=38;5;000:\
uw=38;5;000:gw=38;5;000:tw=38;5;000:\
ux=38;5;001;01:ue=38;5;001:gx=38;5;001:tx=38;5;001:\
*.md=38;5;000\
"
            # zsh-autosuggestions: https://github.com/zsh-users/zsh-autosuggestions#suggestion-highlight-style
            export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=8"  # default color
        ;;
        d|dark)
            export TERMINAL_THEME="dark"
            export BAT_THEME="OneHalfDark"
            export EXA_COLORS=""
            export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=252"
        ;;
        *)
        ;;
    esac
    alias bat="bat --theme=${BAT_THEME}"
}

######################################################################
# ALIASES

# grep
alias grep='grep --color=auto'

# rg
alias rg='rg --smart-case'

# vim
alias v='vim'
alias vv='vim ~/.vimrc'

# git
alias g='git'
alias gpristine='git reset --hard && git clean -dfx -e "cscope*" -e "tags"'
alias cdgitroot='cd $(git rev-parse --show-cdup)'

# tmux
if command -v tmux &> /dev/null; then
    function t() {
        # set default $session to $1 or 0 (if $1 not exist)
        local session="${1:-0}"
        if command -v tmuxinator &> /dev/null && [ -f ~/.tmuxinator/${session}.yml ]; then
            tmuxinator $session
        else
            if tmux has -t $session &> /dev/null; then
                if [ -z "$TMUX" ]; then
                    tmux attach -t $session
                else
                    tmux switch -t $session
                fi
            else
                if [ -z "$TMUX" ]; then
                    tmux new -s $session
                else
                    tmux new -s $session -d && tmux switch -t $session
                fi
            fi

        fi
    }
    alias tk='tmux kill-session -at 0'
    alias tl='tmux list-sessions'
fi

# tmuxinator
if command -v tmuxinator &> /dev/null; then
    alias mux=tmuxinator
fi

# exa
if command -v exa &> /dev/null; then
    alias exa='exa --group-directories-first --time-style=long-iso'
    alias e='exa -l --classify --no-time'
    # show [A]ll files (hidden/ignored files)
    alias ea='e -a'
    # sort by [M]odified
    alias em='exa -l --classify --header --modified --sort=modified'
    # sort by [C]reated
    alias ec='exa -l --classify --header --created --sort=created'
    # tree level
    alias e1='exa -1'
    alias e2='exa --tree --level=2'
    alias e3='exa --tree --level=3'
fi

# Use rg (ripgrep) as fzf's **<TAB> / CTRL-T backend
if command -v rg &> /dev/null; then
    export FZF_DEFAULT_COMMAND="rg --files --no-ignore --hidden --follow --glob '!{.git,.repo,.CMVolumes}/*' 2> /dev/null"
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

# fzf
# Reference: https://man.archlinux.org/man/community/fzf/fzf.1.en
if command -v fzf &> /dev/null; then
    export FZF_DEFAULT_OPTS="--bind left:preview-page-up,right:preview-page-down,alt-enter:toggle-preview"
fi
#

######################################################################



VIRMACH_IP="149.57.137.67"



alias ssh-mypc="ssh -p 7603 shangjin@$BANDWAGON_IP"

######################################################################
