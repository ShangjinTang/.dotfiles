diff --git a/lua/lvim/core/nvimtree.lua b/lua/lvim/core/nvimtree.lua
index 173f1896..a8506cd1 100644
--- a/lua/lvim/core/nvimtree.lua
+++ b/lua/lvim/core/nvimtree.lua
@@ -247,17 +247,89 @@ local function on_attach(bufnr)
     return { desc = "nvim-tree: " .. desc, buffer = bufnr, noremap = true, silent = true, nowait = true }
   end
 
-  api.config.mappings.default_on_attach(bufnr)
+  -- api.config.mappings.default_on_attach(bufnr)
 
   local useful_keys = {
-    ["l"] = { api.node.open.edit, opts "Open" },
-    ["o"] = { api.node.open.edit, opts "Open" },
-    ["<CR>"] = { api.node.open.edit, opts "Open" },
-    ["v"] = { api.node.open.vertical, opts "Open: Vertical Split" },
+    -- Modify with default mappings
+    -- ["<C-]>"] = { api.tree.change_root_to_node, opts "CD" },
+    ["L"] = { api.tree.change_root_to_node, opts "CD" },
+    -- ["<C-e>"] = {api.node.open.replace_tree_buffer, opts "Open: In Place"},
+    -- ["<C-r>"] = {api.fs.rename_sub, opts "Rename: Omit Filename"},
+    -- ["<C-t>"] = { api.node.open.tab, opts "Open: New Tab" },
+    ["+"] = { api.node.open.tab, opts "Open: New Tab" },
+    -- ["<C-v>"] = { api.node.open.vertical, opts "Open: Vertical Split" },
+    ["|"] = { api.node.open.vertical, opts "Open: Vertical Split" },
+    -- ["<C-x>"] = { api.node.open.horizontal, opts "Open: Horizontal Split" },
+    ["-"] = { api.node.open.horizontal, opts "Open: Horizontal Split" },
+    ["<BS>"] = { api.node.navigate.parent_close, opts "Close Directory" },
     ["h"] = { api.node.navigate.parent_close, opts "Close Directory" },
-    ["C"] = { api.tree.change_root_to_node, opts "CD" },
-    ["gtg"] = { telescope_live_grep, opts "Telescope Live Grep" },
-    ["gtf"] = { telescope_find_files, opts "Telescope Find File" },
+    ["<CR>"] = { api.node.open.edit, opts "Open" },
+    ["l"] = { api.node.open.edit, opts "Open" },
+    ["<Tab>"] = { api.node.open.preview, opts "Open Preview" },
+    -- [">"] = { api.node.navigate.sibling.next, opts "Next Sibling" },
+    ["]]"] = { api.node.navigate.sibling.next, opts "Next Sibling" },
+    -- ["<"] = { api.node.navigate.sibling.prev, opts "Previous Sibling" },
+    ["[["] = { api.node.navigate.sibling.prev, opts "Previous Sibling" },
+    -- ["."] = { api.node.run.cmd, opts "Run Command" },
+    -- ["-"] = { api.tree.change_root_to_parent, opts "Up" },
+    ["H"] = { api.tree.change_root_to_parent, opts "Up" },
+    -- ["a"] = { api.fs.create, opts "Create" },
+    ["N"] = { api.fs.create, opts "New File" },
+    -- ["bd"] = { api.marks.bulk.delete, opts "Delete Bookmarked" },
+    -- ["bmv"] = { api.marks.bulk.move, opts "Move Bookmarked" },
+    ["B"] = { api.tree.toggle_no_buffer_filter, opts "Toggle Filter: No Buffer" },
+    -- ["c"] = { api.fs.copy.node, opts "Copy" },
+    ["C"] = { api.fs.copy.node, opts "Copy" },
+    -- ["C"] = { api.tree.toggle_git_clean_filter, opts "Toggle Filter: Git Clean" },
+    -- ["[c"] = { api.node.navigate.git.prev, opts "Prev Git" },
+    ["[g"] = { api.node.navigate.git.prev, opts "Prev Git" },
+    -- ["]c"] = { api.node.navigate.git.next, opts "Next Git" },
+    ["]g"] = { api.node.navigate.git.next, opts "Next Git" },
+    -- ["d"] = { api.fs.remove, opts "Delete" },
+    ["D"] = { api.fs.remove, opts "Delete" },
+    -- ["D"] = { api.fs.trash, opts "Trash" },
+    -- ["E"] = { api.tree.expand_all, opts "Expand All" },
+    ["zR"] = { api.tree.expand_all, opts "Expand All" },
+    [">"] = { api.tree.expand_all, opts "Expand All" },
+    -- ["e"] = { api.fs.rename_basename, opts "Rename: Basename" },
+    -- ["]e"] = { api.node.navigate.diagnostics.next, opts "Next Diagnostic" },
+    ["]d"] = { api.node.navigate.diagnostics.next, opts "Next Diagnostic" },
+    -- ["[e"] = { api.node.navigate.diagnostics.prev, opts "Prev Diagnostic" },
+    ["[d"] = { api.node.navigate.diagnostics.prev, opts "Prev Diagnostic" },
+    ["F"] = { api.live_filter.clear, opts "Clean Filter" },
+    ["f"] = { api.live_filter.start, opts "Filter" },
+    -- ["g?"] = { api.tree.toggle_help, opts "Help" },
+    ["?"] = { api.tree.toggle_help, opts "Help" },
+    -- ["gy"] = { api.fs.copy.absolute_path, opts "Copy Absolute Path" },
+    -- ["H"] = { api.tree.toggle_hidden_filter, opts "Toggle Filter: Dotfiles" },
+    ["."] = { api.tree.toggle_hidden_filter, opts "Toggle Filter: Dotfiles" },
+    -- ["I"] = { api.tree.toggle_gitignore_filter, opts "Toggle Filter: Git Ignore" },
+    -- ["J"] = { api.node.navigate.sibling.last, opts "Last Sibling" },
+    -- ["K"] = { api.node.navigate.sibling.first, opts "First Sibling" },
+    -- ["m"] = { api.marks.toggle, opts "Toggle Bookmark" },
+    -- ["o"] = { api.node.open.edit, opts "Open" },
+    -- ["O"] = { api.node.open.no_window_picker, opts "Open: No Window Picker" },
+    -- ["p"] = { api.fs.paste, opts "Paste" },
+    ["P"] = { api.fs.paste, opts "Paste" },
+    -- ["P"] = { api.node.navigate.parent, opts "Parent Directory" },
+    ["q"] = { api.tree.close, opts "Close" },
+    -- ["r"] = { api.fs.rename, opts "Rename" },
+    ["R"] = { api.fs.rename, opts "Rename" },
+    -- ["R"] = { api.tree.reload, opts "Refresh" },
+    -- ["s"] = { api.node.run.system, opts "Run System" },
+    -- ["S"] = { api.tree.search_node, opts "Search" },
+    ["s"] = { api.tree.search_node, opts "Search" },
+    -- ["U"] = { api.tree.toggle_custom_filter, opts "Toggle Filter: Hidden" },
+    -- ["W"] = { api.tree.collapse_all, opts "Collapse" },
+    ["zM"] = { api.tree.collapse_all, opts "Collapse" },
+    ["<"] = { api.tree.collapse_all, opts "Collapse" },
+    -- ["x"] = { api.fs.cut, opts "Cut" },
+    ["X"] = { api.fs.cut, opts "Cut" },
+    -- ["y"] = { api.fs.copy.filename, opts "Copy Name" },
+    -- ["y"] = { api.fs.copy.filename, opts "Copy Name" },
+    -- ["Y"] = { api.fs.copy.relative_path, opts "Copy Relative Path" },
+    -- ["<2-LeftMouse>"] = { api.node.open.edit, opts "Open" },
+    -- ["<2-RightMouse>"] = { api.tree.change_root_to_node, opts "CD" },
   }
 
   require("lvim.keymappings").load_mode("n", useful_keys)
